package api

import (
	"encoding/json"
	"io"
	"net/http"
)

func MakeFullRequest() ([]Item, error) {
	var temp FullRequest
	reqBody, err := MakeRequest("https://botw-compendium.herokuapp.com/api/v2/all")
	if err != nil {
		return nil, err
	}
	err = json.Unmarshal(reqBody, &temp)
	if err != nil {
		return nil, err
	}
	return FlattenFullRequest(temp), err
}

func MakeCategoryRequest(categoryName string) (result CategoryRequest, err error) {
	reqBody, err := MakeRequest("https://botw-compendium.herokuapp.com/api/v2/category/" + categoryName)
	if err != nil {
		return result, err
	}
	err = json.Unmarshal(reqBody, &result)
	return result, err
}

func MakeEntryRequest(entryName string) (result EntryRequest, err error) {
	reqBody, err := MakeRequest("https://botw-compendium.herokuapp.com/api/v2/entry/" + entryName)
	if err != nil {
		return result, err
	}
	err = json.Unmarshal(reqBody, &result)
	return result, err
}

func MakeRequest(url string) (result []byte, err error) {
	client := &http.Client{}
	req, _ := http.NewRequest("GET", url, nil)

	res, err := client.Do(req)
	if err != nil {
		return nil, err
	}
	defer res.Body.Close()

	if res.StatusCode != http.StatusOK {
		return nil, err
	}

	body, err := io.ReadAll(res.Body)
	if err != nil {
		return nil, err
	}
	return body, nil
}

// func RetrieveFallback() (AutoGenerated, error) {
// 	var result AutoGenerated
// 	data, err := os.ReadFile("assets/data/fallback.json")
// 	if err != nil {
// 		return AutoGenerated{}, err
// 	}
// 	err = json.Unmarshal(data, &result)
// 	return result, nil
// }
